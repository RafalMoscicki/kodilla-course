SET  @RENTSQTY = 0;

CREATE TRIGGER RENTSCOUNTER BEFORE INSERT ON RENTS
FOR EACH ROW
BEGIN
    SET @RENTSQTY = @RENTSQTY + 1;
END

SELECT @RENTSQTY;

INSERT INTO RENTS(BOOK_ID, READER_ID, RENT_DATE, RETURN_DATE)
   VALUES(1, 3, DATE_SUB(CURDATE(), INTERVAL 5 DAY), NULL);

INSERT INTO RENTS(BOOK_ID, READER_ID, RENT_DATE, RETURN_DATE)
   VALUES(2, 3, DATE_SUB(CURDATE(), INTERVAL 2 DAY), NULL);

INSERT INTO RENTS(BOOK_ID, READER_ID, RENT_DATE, RETURN_DATE)
   VALUES(3, 1, DATE_SUB(CURDATE(), INTERVAL 5 DAY), NULL);

INSERT INTO RENTS(BOOK_ID, READER_ID, RENT_DATE, RETURN_DATE)
   VALUES(2, 4, DATE_SUB(CURDATE(), INTERVAL 3 DAY), NULL);

COMMIT;

DROP TRIGGER RENTS_UPDATE;

CREATE TABLE RENTS_AUD (
    EVENT_ID INT(11) NOT NULL AUTO_INCREMENT,
    EVENT_DATE DATETIME NOT NULL,
    EVENT_TYPE VARCHAR(10) DEFAULT NULL,
    RENT_ID INT (11) NOT NULL,
    OLD_BOOK_ID INT (11),
    NEW_BOOK_ID INT(11),
    OLD_READER_ID INT(11),
    NEW_READER_ID INT(11),
    OLD_RENT_DATE DATETIME,
    NEW_RENT_DATE DATETIME,
    OLD_RETURN_DATE DATETIME,
    NEW_RETURN_DATE DATETIME,
    PRIMARY KEY (EVENT_ID)
);

CREATE TRIGGER RENTS_INSERT AFTER INSERT ON RENTS
FOR EACH ROW
BEGIN
    INSERT INTO RENTS_AUD (EVENT_DATE, EVENT_TYPE, RENT_ID, NEW_BOOK_ID, NEW_READER_ID,
                          NEW_RENT_DATE, NEW_RETURN_DATE)
      VALUE(CURTIME(), "INSERT", NEW.RENT_ID, NEW.BOOK_ID, NEW.READER_ID, NEW.RENT_DATE,
            NEW.RETURN_DATE);
END;

INSERT INTO RENTS (BOOK_ID, READER_ID, RENT_DATE, RETURN_DATE)
   VALUES (2, 4, DATE_SUB(CURDATE(), INTERVAL 5 DAY), NULL);

COMMIT;

SELECT * FROM RENTS_AUD;

SELECT * FROM RENTS;

CREATE TRIGGER RENTS_DELETE AFTER DELETE ON RENTS
FOR EACH ROW
BEGIN
   INSERT INTO RENTS_AUD (EVENT_DATE, EVENT_TYPE, RENT_ID)
      VALUE(CURTIME(), "DELETE", OLD.RENT_ID);
END

DELETE FROM RENTS WHERE RENT_ID = 12;

COMMIT;

CREATE TRIGGER RENTS_UPDATE AFTER UPDATE ON RENTS
FOR EACH ROW
BEGIN
   INSERT INTO RENTS_AUD (EVENT_DATE, EVENT_TYPE, RENT_ID, NEW_BOOK_ID, NEW_READER_ID,
                          NEW_RENT_DATE, NEW_RETURN_DATE, OLD_BOOK_ID, OLD_READER_ID,
                          OLD_RENT_DATE, OLD_RETURN_DATE)
      VALUE(CURTIME(), "UPDATE", OLD.RENT_ID, NEW.BOOK_ID, NEW.READER_ID,
            NEW.RENT_DATE, NEW.RETURN_DATE, OLD.BOOK_ID, OLD.READER_ID,
            OLD.RENT_DATE, OLD.RETURN_DATE);
END

UPDATE RENTS SET RETURN_DATE = CURDATE()
   WHERE RENT_ID = 11;

COMMIT;